name: Test, Build and Release Pharmanathi MHP Android APKs

on: 
  push:
    paths:
       - 'mobile_mhp/**' 
  workflow_dispatch:

jobs:
  # androind_integration_test:
  #   name: Run Android integration tests
  #   defaults:
  #     run:
  #         working-directory: ./mobile_mhp
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 20
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Enable KVM
  #     run: |
  #       echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
  #       sudo udevadm control --reload-rules
  #       sudo udevadm trigger --name-match=kvm

  #   - name: Create .env file
  #     run: |
  #       cat << EOF > .env.production
  #       API_BASE_URL=${{ secrets.TEST_API_BASE_URL }}
  #       APP_LABEL=mhp
  #       ENVIRONMENT=${{ secrets.ENVIRONMENT }}
  #       SENTRY_ON=${{ secrets.MHP_SENTRY_ON }}
  #       SENTRY_DSN=${{ secrets.MHP_SENTRY_DSN }}
  #       EOF
  #       touch .env.development

  #   - name: Setup Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: 3.27.1
  #       channel: stable
  #       cache: true

  #   - name: Install dependencies
  #     run: flutter pub get
  #   - name: Install & Check Patrol cli
  #     run: |
  #       flutter pub global activate patrol_cli
  #       patrol doctor
  #   - name: Setup Android emulator and run tests
  #     uses: reactivecircus/android-emulator-runner@v2
  #     with:
  #       api-level: 29
  #       script: cd mobile_mhp && flutter test --verbose integration_test/sign_in_test.dart

  #   - name: Upload Android crash logs
  #     if: failure()
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: android-crash-logs
  #       path: crash_log.txt
  
  #******************************iOS ******************************#
  ios_integration_test:
    name: Run iOS integration tests
    defaults:
      run:
          working-directory: ./mobile_mhp
    runs-on: macos-latest
    timeout-minutes: 20
    
    steps:
    - uses: actions/checkout@v3
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_16.1.0.app'
    - name: Create .env file
      run: |
        cat << EOF > .env.production
        API_BASE_URL=${{ secrets.TEST_API_BASE_URL }}
        APP_LABEL=mhp
        ENVIRONMENT=${{ secrets.ENVIRONMENT }}
        SENTRY_ON=${{ secrets.MHP_SENTRY_ON }}
        SENTRY_DSN=${{ secrets.MHP_SENTRY_DSN }}
        EOF
        cp .env.production .env.development 
    
    - uses: futureware-tech/simulator-action@v3
      with:
        model: 'iPhone 15'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 3.27.1
        channel: stable
        cache: true
    - name: Install dependencies
      run: flutter pub get
    - name: Install & Check Patrol cli
      run: |
        flutter pub global activate patrol_cli
        patrol doctor
    - name: Run iOS integration tests
      run: |
        ls -al
        patrol test --verbose --debug --test-server-port 8089 --app-server-port 8090 integration_test/sign_in_test.dart
    - name: Upload iOS crash logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: ios-crash-logs
        path: crash_log.txt
