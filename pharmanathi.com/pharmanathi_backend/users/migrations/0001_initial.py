# Generated by Django 5.0.7 on 2024-08-27 14:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import pharmanathi_backend.users.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("line_1", models.CharField(max_length=100)),
                ("line_2", models.CharField(blank=True, max_length=100, null=True)),
                ("suburb", models.CharField(max_length=50)),
                ("city", models.CharField(max_length=50)),
                (
                    "province",
                    models.CharField(
                        choices=[
                            ("EC", "Eastern Cape"),
                            ("FS", "Free State"),
                            ("GP", "Gauteng"),
                            ("KZN", "KwaZulu-Natal"),
                            ("LP", "Limpopo"),
                            ("NC", "Northern Cape"),
                            ("NW", "North-West"),
                            ("WC", "Western Cape"),
                        ],
                        max_length=3,
                    ),
                ),
                ("lat", models.DecimalField(decimal_places=13, max_digits=16, null=True)),
                ("long", models.DecimalField(decimal_places=13, max_digits=16, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Speciality",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("symbol", models.CharField(max_length=15)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=255, verbose_name="Name of User")),
                ("first_name", models.CharField(blank=True, max_length=255, verbose_name="First name")),
                ("last_name", models.CharField(blank=True, max_length=255, verbose_name="Last name")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="email address")),
                ("_profile_pic", models.URLField(blank=True, null=True)),
                (
                    "sa_id_no",
                    models.IntegerField(
                        null=True,
                        validators=[
                            django.core.validators.MaxLengthValidator(
                                limit_value=13, message="Must be exactly 13 digits."
                            ),
                            django.core.validators.MinLengthValidator(
                                limit_value=13, message="Must be exactly 13 digits."
                            ),
                        ],
                        verbose_name="South African ID Number",
                    ),
                ),
                ("initials", models.CharField(max_length=5, null=True, verbose_name="Initials")),
                (
                    "title",
                    models.CharField(
                        choices=[("Mr", "Mr"), ("Miss", "Miss"), ("Mrs", "Mrs"), ("Ms", "Ms")],
                        max_length=5,
                        null=True,
                        verbose_name="Title",
                    ),
                ),
                ("contact_no", models.CharField(max_length=15, null=True, verbose_name="Contact Number")),
                ("university", models.CharField(max_length=100, null=True, verbose_name="University")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", pharmanathi_backend.users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("hpcsa_no", models.CharField(max_length=32, verbose_name="HPCSA No.")),
                ("mp_no", models.CharField(blank=True, max_length=20, null=True, verbose_name="Mp No.")),
                ("_is_verified", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InvalidationReason",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("text", models.TextField()),
                ("is_resolved", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("mhp", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="users.doctor")),
                (
                    "resolved_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="resolver",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PracticeLocation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("address", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="users.address")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="doctor",
            name="practicelocations",
            field=models.ManyToManyField(to="users.practicelocation"),
        ),
        migrations.AddField(
            model_name="doctor",
            name="specialities",
            field=models.ManyToManyField(to="users.speciality"),
        ),
        migrations.CreateModel(
            name="VerificationReport",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("report", models.JSONField()),
                (
                    "type",
                    models.CharField(choices=[("SAPC", "SAPC"), ("HPCSA", "HPCSA")], editable=False, max_length=7),
                ),
                (
                    "mp",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="verification_reports",
                        to="users.doctor",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
