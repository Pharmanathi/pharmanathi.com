#!/usr/bin/env bash

# This script is used to run and configure the DNS for the *production* environment.
# To run it: 
#   - First ensure it is executable: chmod +x run-pharmanthi-prod
#   - Then run it, passing it options as follows: ./run-pharmanthi-prod [--build] [--update]

IP=$(curl -s ifconfig.me)

# Prepare environment
source ./prepare-environment

# Specify whether to collect latest code change using the --update flag
# Note that this will first ensure the current branch is "main" before
# pulling and merging with remote.
if [[ $* == *--update* ]]; then
    printf "\n\n-------------- Getting System's latest version --------------\n"
    git checkout main
    git pull
fi


printf "\n\n--------------- Started updating DNS settings ---------------\n"
wget -O cloudflary.py https://raw.githubusercontent.com/Olfredos6/cloudflary.py/cli/cloudflary.py
# api.pharmanthi.com
python3 cloudflary.py update --record-id d6c008f070c1dcc4cdc31e55c1e7f346 --payload "{\"content\": \"$IP\"}"
# cdn.pharmanthi.com
python3 cloudflary.py update --record-id fd66e056a5ea3a7500ee41ac5e0c6e01 --payload "{\"content\": \"$IP\"}"
# pharmanathi.com
python3 cloudflary.py update --record-id 04ddd7337b39d54f602ca52dcb9637b7 --payload "{\"content\": \"$IP\"}"
rm cloudflary.py


# Rebuild images using the --build flag
if [[ $* == *--build* ]]; then
    printf "\n\n--------------- Cleaning and building images --------------\n"
    docker image prune --all --force
    docker compose -f production.yml build
fi

printf "\n\n----------------------- Running Django Migrations --------------------\n"
docker compose -f production.yml run --rm django python manage.py migrate

printf "\n\n-------------------------- Notifying via Discord ---------------------\n"
curl -X POST -H "Content-Type: application/json" \
    -d '{
            "username": "Pharmanathi Production Server Bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/93515101?s=400&u=e55ddea588763060b73a80603344f13045535310&v=4",
            "embeds": [
                {
                    "title": "Production Server Status",
                    "description": "The production server is being started. Please verify comportment. You may access system health here.",
                    "color": 5763719,
                    "url": "https://www.pharmanthi.com"
                }
              ]
        }' $DISCORD_WEBHOOK_URL
echo Done

printf "\n\n--------------------- Starting Docker services ----------------\n"
docker compose -f production.yml up

