#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

IP=$(curl -s ifconfig.me)

# Prepare environment
source ./prepare-environment

if [[ $* == *--update* ]]; then
    printf "\n\n------------------- Getting System's latest version --------------------\n"
    git checkout main
    git pull
fi


printf "\n\n--------------------- Started updating DNS settings ---------------------\n"
# test.pharmanathi.com
wget -O - https://raw.githubusercontent.com/Olfredos6/cloudflary.py/cli/cloudflary.py |python3 - \
update --record-id 08091ddf5fe91083410bd7ccb5c7ae04 --payload "{\"content\": \"$IP\"}"


# Rebuild images using the --build flag
if [[ $* == *--build* ]]; then
    printf "\n\n--------------- Cleaning and building images --------------\n"
    if [[ $* == *--clean* ]]; then
        printf "Applying --clean option, removing existing images\n"
        docker image prune --all --force
    fi
    docker compose -f production.yml build $DOCKER_BUILD_NO_CACHE
fi

printf "\n\n----------------------- Running Django Migrations ---------------------\n"
docker compose -f production.yml run --rm django python manage.py migrate

printf "\n\n------------------------ Syncing Social Apps... -----------------------\n"
docker compose -f production.yml run --rm django python manage.py runscript sync_social_apps

printf "\n\n------------------------ Syncing Specialities... ----------------------\n"
docker compose -f production.yml run --rm django python manage.py runscript sync_specialities

printf "\n\n-------------------------- Notifying via Discord ----------------------\n"
curl -X POST -H "Content-Type: application/json" \
    -d '{
            "username": "Pharmanathi Test Server Bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/93515101?s=400&u=e55ddea588763060b73a80603344f13045535310&v=4",
            "embeds": [
                {
                    "title": "Test Server Status",
                    "description": "The test server is starting...",
                    "color": 15844367,
                    "url": "https://test.pharmanthi.com"
                }
              ]
        }' $DISCORD_WEBHOOK_URL
echo Done

printf "\n\n------------------------ Starting Docker services ---------------------\n"
exec docker compose -f production.yml up
